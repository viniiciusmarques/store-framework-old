"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const chalk_1 = __importDefault(require("chalk"));
const clients_1 = require("./clients");
const conf_1 = require("./conf");
const logger_1 = __importDefault(require("./logger"));
const login = conf_1.getLogin();
const account = conf_1.getAccount();
const workspace = conf_1.getWorkspace();
const workspaceState = (meta) => (meta.production ? 'production' : 'dev');
const getWorkspaceState = async () => {
    try {
        const meta = await clients_1.workspaces.get(account, workspace);
        return workspaceState(meta) + ' ';
    }
    catch (err) {
        logger_1.default.debug(`Unable to fetch workspace state`);
        logger_1.default.debug(err.message);
        return undefined;
    }
};
exports.greeting = async () => {
    if (account && login && workspace) {
        let loggedMessage = 'Logged into';
        let state = await getWorkspaceState();
        if (!state) {
            loggedMessage = `${chalk_1.default.red('Not logged in')}. Previously logged into`;
            state = '';
        }
        return [
            `${loggedMessage} ${chalk_1.default.blue(account)} as ${chalk_1.default.green(login)} at ${chalk_1.default.yellowBright(state)}workspace ${chalk_1.default.green(workspace)}`,
        ];
    }
    return ['Welcome to VTEX I/O', `Login with ${chalk_1.default.green('vtex login')} ${chalk_1.default.blue('<account>')}`];
};
