"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const chalk_1 = __importDefault(require("chalk"));
const clients_1 = require("../../clients");
const conf_1 = require("../../conf");
const errors_1 = require("../../errors");
const manifest_1 = require("../../lib/manifest");
const logger_1 = __importDefault(require("../../logger"));
const prompts_1 = require("../prompts");
const utils_1 = require("./utils");
const { uninstallApp } = clients_1.apps;
const promptAppUninstall = (appsList) => prompts_1.promptConfirm(`Are you sure you want to uninstall ${appsList.join(', ')} from account ${chalk_1.default.blue(conf_1.getAccount())}, workspace ${chalk_1.default.green(conf_1.getWorkspace())}?`).then(answer => {
    if (!answer) {
        throw new errors_1.UserCancelledError();
    }
});
const uninstallApps = async (appsList) => {
    for (const app of appsList) {
        const appName = manifest_1.ManifestValidator.validateApp(app.split('@')[0], true);
        try {
            logger_1.default.debug('Starting to uninstall app', appName);
            await uninstallApp(appName);
            logger_1.default.info(`Uninstalled app ${appName} successfully`);
        }
        catch (e) {
            logger_1.default.warn(`The following app was not uninstalled: ${appName}`);
            logger_1.default.error(`${e.response.status}: ${e.response.statusText}. ${e.response.data.message}`);
        }
    }
};
exports.default = async (optionalApp, options) => {
    await utils_1.validateAppAction('uninstall', optionalApp);
    const app = optionalApp || (await manifest_1.ManifestEditor.getManifestEditor()).appLocator;
    const appsList = [app, ...utils_1.parseArgs(options._)];
    const preConfirm = options.y || options.yes;
    if (!preConfirm) {
        await promptAppUninstall(appsList);
    }
    logger_1.default.debug('Uninstalling app' + (appsList.length > 1 ? 's' : '') + `: ${appsList.join(', ')}`);
    return uninstallApps(appsList);
};
