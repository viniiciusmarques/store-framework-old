"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const chalk_1 = __importDefault(require("chalk"));
const conf_1 = require("../../conf");
const env = __importStar(require("../../env"));
const user_agent_1 = __importDefault(require("../../user-agent"));
const utils_1 = require("../utils");
const utils_2 = require("./utils");
const dummyLogger_1 = require("../../clients/dummyLogger");
const context = (workspace) => {
    // Returns default context with variable workspace name.
    return {
        account: conf_1.getAccount(),
        authToken: conf_1.getToken(),
        production: false,
        product: '',
        region: env.region(),
        route: {
            id: '',
            params: {},
        },
        userAgent: user_agent_1.default,
        workspace,
        requestId: '',
        operationId: '',
        logger: dummyLogger_1.dummyLogger,
        platform: '',
    };
};
exports.default = async (workspace1 = 'master', workspace2 = conf_1.getWorkspace()) => {
    const deps1 = await utils_2.getCleanDependencies(context(workspace1));
    const deps2 = await utils_2.getCleanDependencies(context(workspace2));
    const diffTable = utils_1.matchedDepsDiffTable(workspace1, workspace2, deps1, deps2);
    if (diffTable.length === 1) {
        return console.log(`${chalk_1.default.yellow('Dependency diff')} between ${chalk_1.default.yellow(workspace1)} and ${chalk_1.default.yellow(workspace2)} is empty\n`);
    }
    console.log(`${chalk_1.default.yellow('Dependency diff')} between ${chalk_1.default.yellow(workspace1)} and ${chalk_1.default.yellow(workspace2)}`);
    console.log(diffTable.toString());
};
